sudo: required
cache: ccache
language: cpp

matrix:
  include:
    - os: linux
      dist: bionic
      env: CXX_COMPILER=g++-7
      addons:
        apt:
          sources:
          - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
          - g++-7
          - pandoc
          - ccache
    - os: linux
      dist: bionic
      env: CXX_COMPILER=g++-8
      addons:
        apt:
          sources:
          - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
          - g++-8
          - pandoc
          - ccache
    - os: linux
      dist: bionic
      env: CXX_COMPILER=g++-9
      addons:
        apt:
          sources:
          - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
          - g++-9
          - pandoc
          - ccache
    - os: linux
      dist: bionic
      env: CXX_COMPILER=clang++
      compiler: clang++
      addons:
        apt:
          sources:
          - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
          - g++-8
          - pandoc
          - ccache
    - os: osx
      osx_image: xcode10.2
      env: CXX_COMPILER=clang++
      addons:
       homebrew:
         packages:
           - ccache
           - meson
      install:
       - export PATH="/usr/local/opt/ccache/libexec:$PATH"
    - os: osx
      osx_image: xcode11.2
      env: CXX_COMPILER=clang++
      addons:
       homebrew:
         packages:
           - ccache
           - meson
      install:
       - export PATH="/usr/local/opt/ccache/libexec:$PATH"

before_install:
  # We need to re-export CC and CXX here, because travis exports CXX=g++ or clang++ AFTER we set CXX.
  - PATH=$HOME/local/bin:$PATH
  - echo $PATH
  - if [ -n "${C_COMPILER}" ]; then export CC="ccache ${C_COMPILER}"; fi
  - if [ -n "${CXX_COMPILER}" ]; then export CXX="ccache ${CXX_COMPILER}"; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then export PKG_CONFIG_PATH="/usr/local/opt/libffi/lib/pkgconfig" ; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then pyenv local 3.7 && pip3 install meson ninja; fi

script:
  - meson build --prefix=$HOME/local
  - ninja -C build install
# Run internal test suite
  - cd tests
  - ./run-tests.py bali-phy
# Run testiphy test suite
  - cd
  - git clone https://gitlab.com/testiphy/testiphy.git
  - cd $HOME/testiphy
  - which bali-phy || true
  - ./testiphy bali-phy

env:
  global:
  - secure: ZWEqJt9rWuQQ0uJYx1ZDKASbe1lNOq8dLxfGzRq6ItWZ7v42iFik7WQzQNRcHskfkLnpX48+3iGz8+M6QFIY+y9KKk3hgsR+zEW/kZSlBxA+VSIOP2lV3Z5zBlnO3m0WoLTrDABBfHRFGqjU2JcM2tXLc6TyislMV5Y20edJgNWLNajGdei7+7A48UBSPq1hIA0fU2LZAScdy2TxcbpL8x/aAmE5T1IRBewjXK1x4CARmLJYXZfJDeCUpif2VoApEGwCOqXQtTKrBpJbUQ+sYi+JHCGh3oDFoHmuFJeEM7HrUOJBOI8k5A7wRq/+JESGIa2UObdHu1GZDVxj22YRRSSzQTEy9QyTnFTdYbkkcG83wwZ/57EOAhKA1TqwEDj8Hhux/oQAkR/S27iQ2vCvUtx5wlzX4L2KhinHhVVW7EPs6NQLc8FiRHjAzSaEmLph8UXlSxa+2Yx/+wyQXH3SmJi4r470r5F/orVhZBkw2k7CPhg7YfBPFDODkg+QMIk60hiVE6n/ToeTOCTxti0Lfajq6pzl+KFs/pungbnwZqx8neVGkpE0Z5Lhgr1KV/W17/AxKC62+BIGTRSQXpCxignVXbWqvzLCGCgSxiJ7Y+uphS1UV5lz1EAPTqnPkcxe+1MV64vAe8zMvug4Mb2DsV9QjIvjot1X+FlyzHWhMpc=

