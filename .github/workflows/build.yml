name: Build and test

on:
  push:
    branches:
      - master
  pull_request:
    branches:
    - "*"

jobs:
  build:
    strategy:
      matrix:
        name: [ubuntu-gcc-8,
               ubuntu-gcc-9,
               ubuntu-clang-9,
               macos-xcode-10.3,
               macos-xcode-latest,
               macos-clang]

        include:
          - name: ubuntu-gcc-8
            os: ubuntu-latest
            compiler: gcc
            version: "8"

          - name: ubuntu-gcc-9
            os: ubuntu-latest
            compiler: gcc
            version: "9"

          - name: ubuntu-clang-9
            os: ubuntu-latest
            compiler: clang-9

          - name: macos-xcode-10.3
            os: macos-latest
            compiler: xcode
            version: "10.3"

          - name: macos-xcode-latest
            os: macos-latest
            compiler: xcode

          - name: macos-clang
            os: macos-latest
            compiler: clang

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Setup build environment
      run: |
        if [ "$RUNNER_OS" = "Linux" ]; then
          sudo apt install -y pandoc libcairo2-dev ccache
          sudo apt autoremove
          sudo rm -rf /usr/local/share/boost
        else
          brew update
          brew install pkg-config pandoc cairo ccache coreutils
          export PKG_CONFIG_PATH="/usr/local/opt/libffi/lib/pkgconfig"
        fi
        python3 -mpip install meson ninja

    - name: Prepare ccache timestamp
      id: ccache_cache_timestamp
      run: |
        if [ "$RUNNER_OS" = "Linux" ]; then
          echo ::set-output name=timestamp::$(date -Ins)
        else
          echo ::set-output name=timestamp::$(gdate -Ins)
        fi

    - name: ccache cache files
      uses: actions/cache@v1.1.0
      with:
         path: .ccache
         key: ${ { matrix.config.name } }-ccache-${ { steps.ccache_cache_timestamp.outputs.timestamp } }
         restore-keys: |
           ${ { matrix.config.name } }-ccache-

    - name: Configure
      run: |
        meson build --prefix=$HOME/local --buildtype=release
    - name: Build
      run: |
        ninja -C build install -j4
    - name: Test
      run: |
        export PATH=$HOME/local/bin:$PATH
        echo ::group::Test suite
        cd tests
        ./run-tests.py bali-phy
        cd
        echo ::endgroup::
        echo ::group::testiphy
        git clone https://gitlab.com/testiphy/testiphy.git
        cd testiphy
        which bali-phy || true
        ./testiphy bali-phy
        echo ::endgroup::
