size = 1   Test.#0 = 1
size = 1   Test.#1 = 2
size = 4   Test.#147 = \#1250 -> case #1250 of {(#1251, #1252) -> let {#1254 = Prelude:multiply #1251 #1251} in let {#1255 = []} in #1254:#1255; _ -> []}
size = 1   Test.#2 = (Test.#0, Test.#1)
size = 1   Test.#3 = 3
size = 1   Test.#4 = 4
size = 1   Test.#5 = (Test.#3, Test.#4)
size = 1   Test.#547 = Test.#2:Test.#6
size = 2   Test.#548 = Data.List.map Test.#147 Test.#547
size = 1   Test.#6 = Test.#5:[]
size = 1   Test.x = 1
size = 1   Test.xxs = Data.List.concat Test.#548
size = 1   Test.xys = Test.#2:Test.#6
size = 1   Test.y = 2
