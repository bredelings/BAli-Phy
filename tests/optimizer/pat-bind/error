size = 1   Test.#0 = 1
size = 1   Test.#1 = 2
size = 1   Test.#2 = (Test.#0, Test.#1)
size = 1   Test.#3 = 3
size = 1   Test.#4 = 4
size = 1   Test.#5 = (Test.#3, Test.#4)
size = 4   Test.#515 = \#1211 -> case #1211 of {(#1212, #1213) -> let {#1215 = Prelude:multiply #1212 #1212} in let {#1216 = []} in #1215:#1216,_ -> []}
size = 1   Test.#519 = Test.#2:Test.#6
size = 2   Test.#520 = Data.List.map Test.#515 Test.#519
size = 1   Test.#6 = Test.#5:[]
size = 1   Test.x = 1
size = 1   Test.xxs = Data.List.concat Test.#520
size = 1   Test.xys = Test.#2:Test.#6
size = 1   Test.y = 2
