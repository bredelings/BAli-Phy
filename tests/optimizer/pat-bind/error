size = 1   Test.#0 = 1
size = 1   Test.#1 = 2
size = 1   Test.#2 = (Test.#0, Test.#1)
size = 1   Test.#3 = 3
size = 1   Test.#4 = 4
size = 1   Test.#5 = (Test.#3, Test.#4)
size = 4   Test.#511 = \#1182 -> case #1182 of {(#1183, #1184) -> let {#1186 = Prelude:multiply #1183 #1183} in let {#1187 = []} in #1186:#1187,_ -> []}
size = 1   Test.#515 = Test.#2:Test.#6
size = 2   Test.#516 = Data.List.map Test.#511 Test.#515
size = 1   Test.#6 = Test.#5:[]
size = 1   Test.x = 1
size = 1   Test.xxs = Data.List.concat Test.#516
size = 1   Test.xys = Test.#2:Test.#6
size = 1   Test.y = 2
