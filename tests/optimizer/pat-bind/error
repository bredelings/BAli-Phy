size = 1   Test.#0 = 1
size = 1   Test.#1 = 2
size = 4   Test.#139 = \#1207 -> case #1207 of {(#1208, #1209) -> let {#1211 = Prelude:multiply #1208 #1208} in let {#1212 = []} in #1211:#1212,_ -> []}
size = 1   Test.#2 = (Test.#0, Test.#1)
size = 1   Test.#3 = 3
size = 1   Test.#4 = 4
size = 1   Test.#5 = (Test.#3, Test.#4)
size = 1   Test.#513 = Test.#2:Test.#6
size = 2   Test.#514 = Data.List.map Test.#139 Test.#513
size = 1   Test.#6 = Test.#5:[]
size = 1   Test.x = 1
size = 1   Test.xxs = Data.List.concat Test.#514
size = 1   Test.xys = Test.#2:Test.#6
size = 1   Test.y = 2
