size = 1   Test.#0 = 1
size = 1   Test.#1 = (Test.#0, Test.#1282)
size = 1   Test.#1282 = 2
size = 1   Test.#1284 = (Test.#1285, Test.#1286)
size = 1   Test.#1285 = 3
size = 1   Test.#1286 = 4
size = 3   Test.#197 = \#1289 -> case #1289 of {(#1290, #3) -> let {#4 = Prelude:multiply #1290 #1290} in #4:Test.#5; _ -> []}
size = 1   Test.#199 = Test.#1:Test.#2
size = 1   Test.#2 = Test.#1284:[]
size = 2   Test.#200 = Data.List.map Test.#197 Test.#199
size = 1   Test.#5 = []
size = 1   Test.x = 1
size = 1   Test.xxs = Data.List.concat Test.#200
size = 1   Test.xys = Test.#1:Test.#2
size = 1   Test.y = 2
