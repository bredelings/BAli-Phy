size = 1   Test.#0 = 1
size = 1   Test.#1 = 2
size = 4   Test.#133 = \#1161 -> case #1161 of {(#1162, #1163) -> let {#1165 = Prelude:multiply #1162 #1162} in let {#1166 = []} in #1165:#1166,_ -> []}
size = 1   Test.#2 = (Test.#0, Test.#1)
size = 1   Test.#3 = 3
size = 1   Test.#4 = 4
size = 1   Test.#5 = (Test.#3, Test.#4)
size = 1   Test.#510 = Test.#2:Test.#6
size = 2   Test.#511 = Data.List.map Test.#133 Test.#510
size = 1   Test.#6 = Test.#5:[]
size = 1   Test.x = 1
size = 1   Test.xxs = Data.List.concat Test.#511
size = 1   Test.xys = Test.#2:Test.#6
size = 1   Test.y = 2
