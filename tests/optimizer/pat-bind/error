size = 1   Test.#8148 = 1
size = 1   Test.#8149 = 2
size = 1   Test.#8150 = (Test.#8148, Test.#8149)
size = 1   Test.#8151 = 3
size = 1   Test.#8152 = 4
size = 1   Test.#8153 = (Test.#8151, Test.#8152)
size = 1   Test.#8154 = []
size = 1   Test.#8155 = Test.#8153:Test.#8154
size = 1   Test.#8156 = []
size = 3   Test.#8157 = \#8158 -> case #8158 of {(#8159, #8160) -> let {#8161 = Prelude:multiply #8159 #8159} in #8161:Test.#8156; _ -> Test.$v#8163}
size = 1   Test.#8164 = Test.#8150:Test.#8155
size = 2   Test.#8165 = Data.List.map Test.#8157 Test.#8164
size = 1   Test.$v#8163 = []
size = 1   Test.x = 1
size = 1   Test.xxs = Data.List.concat Test.#8165
size = 1   Test.xys = Test.#8150:Test.#8155
size = 1   Test.y = 2
