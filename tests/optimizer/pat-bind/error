size = 1   Test.#20741 = 1
size = 1   Test.#20742 = 2
size = 1   Test.#20743 = (Test.#20741, Test.#20742)
size = 1   Test.#20744 = 3
size = 1   Test.#20745 = 4
size = 1   Test.#20746 = (Test.#20744, Test.#20745)
size = 1   Test.#20747 = []
size = 1   Test.#20748 = Test.#20746:Test.#20747
size = 1   Test.#20749 = []
size = 3   Test.#20750 = \#20751 -> case #20751 of {(#20752, #20753) -> let {#20754 = Num:multiply_int #20752 #20752} in #20754:Test.#20749; _ -> Test.$v#20756}
size = 1   Test.#20757 = Test.#20743:Test.#20748
size = 2   Test.#20758 = Data.List.map Test.#20750 Test.#20757
size = 1   Test.$v#20756 = []
size = 1   Test.xxs = Data.List.concat Test.#20758
size = 1   Test.xys = Test.#20743:Test.#20748
