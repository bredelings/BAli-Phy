size = 1   Test.#0 = 1
size = 1   Test.#1 = 2
size = 4   Test.#147 = \#1256 -> case #1256 of {(#1257, #1258) -> let {#1260 = Prelude:multiply #1257 #1257} in let {#1261 = []} in #1260:#1261; _ -> []}
size = 1   Test.#2 = (Test.#0, Test.#1)
size = 1   Test.#3 = 3
size = 1   Test.#4 = 4
size = 1   Test.#5 = (Test.#3, Test.#4)
size = 1   Test.#528 = Test.#2:Test.#6
size = 2   Test.#529 = Data.List.map Test.#147 Test.#528
size = 1   Test.#6 = Test.#5:[]
size = 1   Test.x = 1
size = 1   Test.xxs = Data.List.concat Test.#529
size = 1   Test.xys = Test.#2:Test.#6
size = 1   Test.y = 2
