size = 1   Test.#8129 = 1
size = 1   Test.#8130 = 2
size = 1   Test.#8131 = (Test.#8129, Test.#8130)
size = 1   Test.#8132 = 3
size = 1   Test.#8133 = 4
size = 1   Test.#8134 = (Test.#8132, Test.#8133)
size = 1   Test.#8135 = []
size = 1   Test.#8136 = Test.#8134:Test.#8135
size = 1   Test.#8137 = []
size = 3   Test.#8138 = \#8139 -> case #8139 of {(#8140, #8141) -> let {#8142 = Prelude:multiply #8140 #8140} in #8142:Test.#8137; _ -> Test.$v#8144}
size = 1   Test.#8145 = Test.#8131:Test.#8136
size = 2   Test.#8146 = Data.List.map Test.#8138 Test.#8145
size = 1   Test.$v#8144 = []
size = 1   Test.x = 1
size = 1   Test.xxs = Data.List.concat Test.#8146
size = 1   Test.xys = Test.#8131:Test.#8136
size = 1   Test.y = 2
