size = 1   Test.#0 = Vector:unpack_cpp_string Test.#1 Test.#21
size = 1   Test.#1 = "case: failed pattern match"
size = 1   Test.#10 = Test.#8:Test.#3
size = 1   Test.#1255 = Test.#7:Test.#10
size = 1   Test.#1262 = 10
size = 1   Test.#1264 = 2
size = 1   Test.#2 = '!'
size = 1   Test.#21 = 0
size = 1   Test.#3 = Test.#2:[]
size = 1   Test.#4 = Prelude:error Test.#0
size = 1   Test.#7 = 'y'
size = 1   Test.#8 = 'o'
size = 1   Test.#9 = Prelude:error Test.#1255
size = 1   Test.f = \#6 -> case #6 of {#1259:#1260 -> #1259; [] -> Test.#9; _ -> Test.#4}
size = 3   Test.g = \#1260 -> let {#1261 = 10} in let {#1263 = case #1260 of {#1259:#1264 -> #1259; [] -> Test.#9; _ -> Test.#4}} in Prelude:add #1261 #1263
size = 1   Test.h = Prelude:add Test.#1262 Test.#1264
