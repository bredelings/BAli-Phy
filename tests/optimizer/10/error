size = 1   Test.#8155 = 'y'
size = 1   Test.#8156 = 'o'
size = 1   Test.#8157 = '!'
size = 1   Test.#8158 = []
size = 1   Test.#8159 = Test.#8157:Test.#8158
size = 1   Test.#8160 = Test.#8156:Test.#8159
size = 1   Test.#8161 = Test.#8155:Test.#8160
size = 1   Test.#8163 = "case: failed pattern match"
size = 1   Test.#8164 = Foreign.String.unpack_cpp_string Test.#8163
size = 1   Test.#8170 = 'y'
size = 1   Test.#8171 = 'o'
size = 1   Test.#8172 = '!'
size = 1   Test.#8173 = []
size = 1   Test.#8174 = Test.#8172:Test.#8173
size = 1   Test.#8175 = Test.#8171:Test.#8174
size = 1   Test.#8176 = Test.#8170:Test.#8175
size = 1   Test.#8178 = "case: failed pattern match"
size = 1   Test.#8179 = Foreign.String.unpack_cpp_string Test.#8178
size = 1   Test.#8181 = 10
size = 1   Test.#8187 = 10
size = 1   Test.#8188 = 2
size = 1   Test.$v#8162 = Compiler.Base.error Test.#8161
size = 1   Test.$v#8165 = Compiler.Base.error Test.#8164
size = 1   Test.$v#8177 = Compiler.Base.error Test.#8176
size = 1   Test.$v#8180 = Compiler.Base.error Test.#8179
size = 1   Test.f = \#8166 -> case #8166 of {#8167:#8168 -> #8167; [] -> Test.$v#8162; _ -> Test.$v#8165}
size = 2   Test.g = \#8182 -> let {#8183 = case #8182 of {#8184:#8185 -> #8184; [] -> Test.$v#8177; _ -> Test.$v#8180}} in Prelude:add Test.#8181 #8183
size = 1   Test.h = Prelude:add Test.#8187 Test.#8188
