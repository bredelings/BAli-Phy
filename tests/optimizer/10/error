size = 1   Test.#1 = 'y'
size = 1   Test.#13 = 'y'
size = 1   Test.#14 = 'o'
size = 1   Test.#15 = '!'
size = 1   Test.#16 = Test.#15:[]
size = 1   Test.#17 = Test.#14:Test.#16
size = 1   Test.#18 = Test.#13:Test.#17
size = 1   Test.#19 = "case: failed pattern match"
size = 1   Test.#2 = 'o'
size = 1   Test.#20 = Foreign.String.unpack_cpp_string Test.#19
size = 1   Test.#22 = 10
size = 1   Test.#27 = 2
size = 1   Test.#28 = 10
size = 1   Test.#3 = '!'
size = 1   Test.#4 = Test.#3:[]
size = 1   Test.#5 = Test.#2:Test.#4
size = 1   Test.#6 = Test.#1:Test.#5
size = 1   Test.#7 = "case: failed pattern match"
size = 1   Test.#8 = Foreign.String.unpack_cpp_string Test.#7
size = 1   Test.$v#1 = Compiler.Base.error Test.#6
size = 1   Test.$v#2 = Compiler.Base.error Test.#8
size = 1   Test.$v#3 = Compiler.Base.error Test.#18
size = 1   Test.$v#4 = Compiler.Base.error Test.#20
size = 1   Test.f = \#9 -> case #9 of {#10:#11 -> #10; [] -> Test.$v#1; _ -> Test.$v#2}
size = 2   Test.g = \#21 -> let {#23 = case #21 of {#24:#25 -> #24; [] -> Test.$v#3; _ -> Test.$v#4}} in Prelude:add Test.#22 #23
size = 1   Test.h = Prelude:add Test.#28 Test.#27
