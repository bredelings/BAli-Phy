size = 1   Test.#8186 = 'y'
size = 1   Test.#8187 = 'o'
size = 1   Test.#8188 = '!'
size = 1   Test.#8189 = []
size = 1   Test.#8190 = Test.#8188:Test.#8189
size = 1   Test.#8191 = Test.#8187:Test.#8190
size = 1   Test.#8192 = Test.#8186:Test.#8191
size = 1   Test.#8194 = "case: failed pattern match"
size = 1   Test.#8195 = Foreign.String.unpack_cpp_string Test.#8194
size = 1   Test.#8201 = 'y'
size = 1   Test.#8202 = 'o'
size = 1   Test.#8203 = '!'
size = 1   Test.#8204 = []
size = 1   Test.#8205 = Test.#8203:Test.#8204
size = 1   Test.#8206 = Test.#8202:Test.#8205
size = 1   Test.#8207 = Test.#8201:Test.#8206
size = 1   Test.#8209 = "case: failed pattern match"
size = 1   Test.#8210 = Foreign.String.unpack_cpp_string Test.#8209
size = 1   Test.#8212 = 10
size = 1   Test.#8218 = 10
size = 1   Test.#8219 = 2
size = 1   Test.$v#8193 = Compiler.Base.error Test.#8192
size = 1   Test.$v#8196 = Compiler.Base.error Test.#8195
size = 1   Test.$v#8208 = Compiler.Base.error Test.#8207
size = 1   Test.$v#8211 = Compiler.Base.error Test.#8210
size = 1   Test.f = \#8197 -> case #8197 of {#8198:#8199 -> #8198; [] -> Test.$v#8193; _ -> Test.$v#8196}
size = 2   Test.g = \#8213 -> let {#8214 = case #8213 of {#8215:#8216 -> #8215; [] -> Test.$v#8208; _ -> Test.$v#8211}} in Prelude:add Test.#8212 #8214
size = 1   Test.h = Prelude:add Test.#8218 Test.#8219
