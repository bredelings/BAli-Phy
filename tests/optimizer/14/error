size = 1   Main.#10 = 'f'
size = 1   Main.#11 = Main.#10:[]
size = 1   Main.#1286 = Compiler.Base.error Main.#1292
size = 1   Main.#1292 = Foreign.String.unpack_cpp_string Main.#1293
size = 1   Main.#1293 = "Main.f3: pattern match failure"
size = 1   Main.#14 = Foreign.String.unpack_cpp_string Main.#15
size = 1   Main.#15 = "case: failed pattern match"
size = 1   Main.#17 = Foreign.String.unpack_cpp_string Main.#18
size = 1   Main.#18 = "case: failed pattern match"
size = 1   Main.#19 = 'f'
size = 1   Main.#20 = Main.#19:[]
size = 1   Main.#3 = Compiler.Base.error Main.#11
size = 1   Main.$v#1 = Compiler.Base.error Main.#14
size = 1   Main.$v#2 = Compiler.Base.error Main.#17
size = 7   Main.f = \#1 #2 -> let {fail1#1 = case #1 of {[] -> Main.fail2#1; #9:#10 -> case #2 of {[] -> #9:[]; #11:#12 -> Main.fail2#1; _ -> Main.$v#1}; _ -> Main.$v#2}} in case #1 of {#3:#4 -> case #2 of {#5:#6 -> #4 Data.List.++ #6; _ -> fail1#1}; _ -> fail1#1}
size = 4   Main.f2 = \#1 #2 -> case #1 of {#4:#5 -> case #2 of {#6:#7 -> #5 Data.List.++ #7; [] -> #4:[]; _ -> Main.#3}; _ -> Main.#3}
size = 4   Main.f3 = \#1 #2 -> case #1 of {#4:#5 -> case #2 of {#6:#7 -> #5 Data.List.++ #7; [] -> #4:[]; _ -> Main.#1286}; _ -> Main.#1286}
size = 1   Main.fail2#1 = Compiler.Base.error Main.#20
