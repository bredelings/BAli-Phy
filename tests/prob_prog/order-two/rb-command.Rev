## Two approaches to set up an order-two Markov model

## Works

x[1] ~ dnNormal(0,1)

delta ~ dnNormal(0,sqrt(1/3))

x[2] := x[1] + delta

for (i in 1:98) {

  x[i+2] ~ dnNormal(2 * x[i+1] - x[i],1)

}

print("Take 1, calculating log-probability of x[1]")

print(x[1].lnProbability())

clear()

## Non-centered parameterization. Doesn't work (Rev will need to be force-closed)

x[1] ~ dnNormal(0,1)

delta ~ dnNormal(0,sqrt(1/3))

x[2] := x[1] + delta

for (i in 1:98) {

  dx[i] ~ dnNormal(0,1)

  x[i+2] := dx[i] - x[i] + 2 * x[i+1]

  # # Use below print statement to watch how time to compute probability slows as model is built

  print(x[1].lnProbability())
}

print("Take 2, calculating log-probability of x[1]")

print(x[1].lnProbability())

moves[1] = mvSlide(x[1])

mymodel = model(x[1])

# mymodel.graph("temp.dot",verbose=true,bg="honeydew2")

monitors[1] = mnScreen()

mymcmc = mcmc(mymodel, moves, monitors)

mymcmc.run(10)

q()
