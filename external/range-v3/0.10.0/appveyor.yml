# Range v3 library
#
#  Copyright Casey Carter
#
# SPDX-License-Identifier: BSL-1.0
#
# Project home: https://github.com/ericniebler/range-v3

shallow_clone: true

image: Visual Studio 2019

environment:
  matrix:
    - CXX: clang-cl
      CPP: 17
      platform: x64_x86
      configuration: Debug
      HEADER_CHECK: On

    - CXX: cl
      CPP: latest
      platform: x64
      configuration: Release

cache:
  - C:\ninja-1.8.2

install:
  - ps: |
      if (![IO.File]::Exists("C:\ninja-1.8.2\ninja.exe")) {
        Start-FileDownload 'https://github.com/ninja-build/ninja/releases/download/v1.8.2/ninja-win.zip'
        7z x -y ninja-win.zip -oC:\ninja-1.8.2
      }
      $env:PATH="C:\ninja-1.8.2;$env:PATH"
  - for /f "tokens=1* delims=" %%i in ('"%ProgramFiles(x86)%\Microsoft Visual Studio\Installer\vswhere.exe" -latest -property installationPath') do call "%%i\VC\Auxiliary\Build\vcvarsall.bat" %PLATFORM%
  - cmake --version
  - ninja --version
  - clang-cl --version
  - cl /Bv || exit 0

build_script:
  - ps: |
      $env:CC=$env:CXX
      if ("$env:HEADER_CHECK" -eq '') {
        $env:HEADER_CHECK='Off'
      }
      if (($env:PLATFORM -eq 'x86_x64' -or $env:PLATFORM -eq 'x86') -and $env:CXX -eq 'clang-cl') {
        $env:CXXFLAGS='-m32'
        $env:CFLAGS='-m32'
      }
  - mkdir build && cd build
  - cmake .. -G Ninja -Wdev -DRANGE_V3_HEADER_CHECKS=%HEADER_CHECK% -DCMAKE_BUILD_TYPE=%CONFIGURATION% -DRANGES_CXX_STD=%CPP%
  - ninja

test_script:
  - ctest -j2 --output-on-failure

deploy: off
